---
import { getCategories, getCertificatesByCategory } from "../utils/putCertificados";
import CategoryCard from "./CategoryCard.astro";
import CertificateGrid from "./CertificateGrid.astro";

// Obtener categorías disponibles
const categories = getCategories();
---

<main class="flex flex-col w-full h-auto min-h-[625px] px-4 py-4">
  <!-- Título principal -->
  <div class="flex justify-center items-center mb-8">
    <h1 class="text-[10vw] sm:text-[6vw] lg:text-[2vw] font-bold text-black dark:text-white text-center">
      Certificates Approved
    </h1>
  </div>

  <!-- Sección de categorías -->
  <section class="mb-8" aria-labelledby="categories-heading">
    <h2 id="categories-heading" class="sr-only">Categorías de certificados</h2>
    <div class="grid grid-cols-2 sm:grid-cols-4 gap-4 max-w-4xl mx-auto">
      {categories.map((category) => (
        <CategoryCard
          id={category.id}
          name={category.name}
          logo={category.logo}
        />
      ))}
    </div>
  </section>

  <!-- Sección de certificados -->
  <section id="certificates-section" class="w-full">
    <div id="certificate-container" class="w-full">
      <!-- Los certificados se cargarán dinámicamente aquí -->
    </div>
  </section>
</main>

<script>
  import { getCertificatesByCategory } from '../utils/putCertificados.js';

  document.addEventListener('DOMContentLoaded', () => {
    const certificateContainer = document.getElementById('certificate-container');
    let currentCategory = 'english'; // Categoría por defecto
    let isLoading = false;

    // Función para mostrar certificados
    const displayCertificates = async (categoryId: any) => {
      if (isLoading) return;
      
      isLoading = true;
      currentCategory = categoryId;

      // Mostrar loading
      if (certificateContainer) {
        certificateContainer.innerHTML = `
          <div class="flex justify-center items-center py-12">
            <div class="animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500"></div>
            <span class="ml-3 text-gray-600 dark:text-gray-300">Cargando certificados...</span>
          </div>
        `;
      }

      try {
        // Obtener certificados de la categoría
        const certificates = await getCertificatesByCategory(categoryId);
        
        // Obtener nombre de la categoría
        const categoryName = document.querySelector(`[data-category="${categoryId}"] h2`)?.textContent || 'Certificados';
        
        // Crear componente de grilla
        const gridComponent = document.createElement('div');
        gridComponent.id = 'certificate-display';
        gridComponent.className = 'w-full transition-all duration-500 ease-in-out';
        gridComponent.setAttribute('aria-label', `Certificados de ${categoryName}`);

        if (certificates.length > 0) {
          gridComponent.innerHTML = `
            <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4 xl:grid-cols-5 gap-4 p-4">
              ${certificates.map((certUrl, index) => `
                <article class="group relative overflow-hidden rounded-lg shadow-md hover:shadow-xl transition-all duration-300 will-change-transform hover:scale-105" role="article">
                  <img
                    class="w-full h-48 md:h-56 object-cover transition-transform duration-300 group-hover:scale-110"
                    src="${certUrl}"
                    alt="Certificado ${index + 1} de ${categoryName}"
                    loading="lazy"
                    width="300"
                    height="400"
                  />
                  <div class="absolute inset-0 bg-black bg-opacity-0 group-hover:bg-opacity-50 transition-all duration-300 flex items-center justify-center">
                    <div class="opacity-0 group-hover:opacity-100 transition-opacity duration-300 text-white text-center">
                      <p class="text-sm font-semibold">Certificado ${index + 1}</p>
                      <p class="text-xs">${categoryName}</p>
                    </div>
                  </div>
                </article>
              `).join('')}
            </div>
          `;
        } else {
          gridComponent.innerHTML = `
            <div class="flex flex-col items-center justify-center py-12 text-center">
              <div class="text-gray-400 dark:text-gray-600 mb-4">
                <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z"></path>
                </svg>
              </div>
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                No hay certificados disponibles
              </h3>
              <p class="text-gray-600 dark:text-gray-300">
                No se encontraron certificados para esta categoría.
              </p>
            </div>
          `;
        }

        // Limpiar contenedor y agregar nueva grilla
        if (certificateContainer) {
          certificateContainer.innerHTML = '';
          certificateContainer.appendChild(gridComponent);
          
          // Animar entrada
          setTimeout(() => {
            gridComponent.classList.add('opacity-100');
          }, 100);
        }

      } catch (error) {
        console.error('Error al cargar certificados:', error);
        if (certificateContainer) {
          certificateContainer.innerHTML = `
            <div class="flex flex-col items-center justify-center py-12 text-center">
              <div class="text-red-400 mb-4">
                <svg class="w-16 h-16 mx-auto" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.732 16.5c-.77.833.192 2.5 1.732 2.5z"></path>
                </svg>
              </div>
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-2">
                Error al cargar certificados
              </h3>
              <p class="text-gray-600 dark:text-gray-300">
                Hubo un problema al cargar los certificados. Inténtalo de nuevo.
              </p>
            </div>
          `;
        }
      } finally {
        isLoading = false;
      }
    };

    // Escuchar eventos de selección de categoría
    document.addEventListener('categorySelected', (event) => {
      const { categoryId } = event.detail;
      displayCertificates(categoryId);
    });

    // Cargar certificados por defecto (English)
    displayCertificates('english');
  });
</script>
